#include<cstdio>
#include<iostream>
#include<cmath>
using namespace std;
int a[100][100], dp[100][100];
int path[100];
int helper(int n)
{
    for (int j = 0; j < n; j ++)
    {
        dp[n - 1][j] = a[n - 1][j];
    }
    for (int i = n - 2; i >= 0; i --)
    {
        for (int j = 0; j <= i; j ++) {
            dp[i][j] = a[i][j] + max(dp[i + 1][j], dp[i + 1][j + 1]);
        }
    }
    return dp[0][0];
}

void PrintPath(int n)
{
    int curI = 0, curJ = 0;
    path[0] = a[0][0];
    while (curI + 1 <= n && curJ + 1 <= curI + 1)
    {
        if (dp[curI + 1][curJ] > dp[curI + 1][curJ + 1])
        {
            path[curI + 1] = a[curI + 1][curJ];
        }
        else
        {
            path[curI + 1] = a[curI + 1][curJ + 1];
            curJ ++;
        }
        curI ++;
    }
    for (int i = 0; i < n; i ++) printf("%d ", path[i]);
}

int main()
{
    int n;
    scanf("%d", &n);
    for (int i = 0; i < n; i ++)
    {
        for (int j = 0; j <= i; j ++)
        {
            scanf("%d", &a[i][j]);
        }
    }
    printf("%d\n", helper(n));
    PrintPath(n);
}
